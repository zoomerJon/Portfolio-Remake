/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: akshatmittal (https://sketchfab.com/akshatmittal)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/2021-macbook-pro-14-m1-pro-m1-max-f6b0b940fb6a4286b18a674ef32af2d3
title: 2021 Macbook Pro 14" (M1 Pro / M1 Max)
*/

import React, { useRef } from "react";
import * as THREE from "three";
import { useFrame, useThree } from "@react-three/fiber";
import { Html, useGLTF } from "@react-three/drei";
import WebPage from "../WebPage/WebPage.jsx";

export default function Model(props) {
  const { nodes, materials } = useGLTF("/mac-v1.glb");

  const group = useRef();
  const state = new useThree();

  useFrame((delta) => {
    const t = state.clock.getElapsedTime();
    group.current.rotation.x = THREE.MathUtils.lerp(
      group.current.rotation.x,
      Math.cos(t / 2) / 20 + 0.15,
      0.1
    );
    group.current.rotation.y = THREE.MathUtils.lerp(
      group.current.rotation.y,
      Math.sin(t / 4) / 20,
      0.1
    );
    group.current.rotation.z = THREE.MathUtils.lerp(
      group.current.rotation.z,
      Math.sin(t / 8) / 20,
      0.1
    );
    group.current.position.y = THREE.MathUtils.lerp(
      group.current.position.y,
      (Math.sin(t / 2) * 0.25) / 2,
      0.1
    );
  });
  return (
    <group {...props} dispose={null} ref={group}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <mesh
            geometry={nodes.WeTEPJkcTkMBwBo.geometry}
            material={materials.lbGSuJJwEsUTzIm}
          />
          <mesh
            geometry={nodes.yxTDdMZViYkuOKm.geometry}
            material={materials.BczvixNfkWQzRzZ}
          />
          <mesh
            geometry={nodes.pPCeNYAcgHQGnfB.geometry}
            material={materials.jRMWtdSAaujlvUA}
          />
          <mesh
            geometry={nodes.CpRxqsFibJhVZKA.geometry}
            material={materials.CGiumILqqSMVyeb}
          />
          <mesh
            // position={[0, 2, 0]}
            geometry={nodes.abgVijaHVNRUvcc.geometry}
            // material={materials.UpOvKwLUUXPmnPU}
          >
            <Html
              rotation-x={-Math.PI / 8.8}
              position={[0, 10.2, -15.5]}
              // scale={0.075}
              scale={[3.65, 3.67, 3.6]}
              transform
              occlude
              // className="content mac"
            >
              <WebPage />
            </Html>
          </mesh>
          <mesh
            geometry={nodes.CEvArJuvvmtQsgk.geometry}
            material={materials.yVmFXNTCIwNkqVT}
          />
          <mesh
            geometry={nodes.aUVveCqqwsqchVB.geometry}
            material={materials.yVmFXNTCIwNkqVT}
          />
          <mesh
            geometry={nodes.fiqlelggeOoTUAw.geometry}
            material={materials.SELuppcPLrlTpBi}
          />
          <mesh
            geometry={nodes.zlRXoydEgBQgFUa.geometry}
            material={materials.zqeFZcIteZtOShc}
          />
          <mesh
            geometry={nodes.YvEVHGlTGUxXlGj.geometry}
            material={materials.initialShadingGroup}
          />
          <mesh
            geometry={nodes.FnbkdmFKVeCCxTX.geometry}
            material={materials.ZpTrUizuxJQUyzW}
          />
          <mesh
            geometry={nodes.ehiyYGFzDbgxhiD.geometry}
            material={materials.LJSCtLIrHNHZnIH}
          />
          <mesh
            geometry={nodes.NhThIZELXlNUoIr.geometry}
            material={materials.mpJhsaJJZPPWMEX}
          />
          <mesh
            geometry={nodes.RYgQzNzcnFbacQH.geometry}
            material={materials.VfcxYmbOfnqunYx}
          />
          <mesh
            geometry={nodes.JtnJKXAEPaOoepM.geometry}
            material={materials.lbGSuJJwEsUTzIm}
          />
          <mesh
            geometry={nodes.UxiDBlCRfXiMBzT.geometry}
            material={materials.zWLcvvnJhbcTEtJ}
          />
          <mesh
            geometry={nodes.NgmQYtxXWDmCavo.geometry}
            material={materials.SKOFticEGTqECbB}
          />
          <mesh
            geometry={nodes.PSIiVLWbMOjTmDb.geometry}
            material={materials.SKOFticEGTqECbB}
          />
          <mesh
            geometry={nodes.RkSurqpnfNMQZfv.geometry}
            material={materials.zWLcvvnJhbcTEtJ}
          />
          <mesh
            geometry={nodes.YJMoQnvBNpTrgeH.geometry}
            material={materials.PCfVLhSpFVCvRmc}
          />
          <mesh
            geometry={nodes.KCEhahuknsxQOxv.geometry}
            material={materials.HpEeGHRuOqfcIZU}
          />
          <mesh
            geometry={nodes.tEHnKyDsqJuxIpz.geometry}
            material={materials.yVmFXNTCIwNkqVT}
          />
          <mesh
            geometry={nodes.TCGsaoyNbPKzeSS.geometry}
            material={materials.yVmFXNTCIwNkqVT}
          />
          <mesh
            geometry={nodes.DAuseNOrQKyrxKl.geometry}
            material={materials.yVmFXNTCIwNkqVT}
          />
          <mesh
            geometry={nodes.SjXIFRJFXEqYDUr.geometry}
            material={materials.PCfVLhSpFVCvRmc}
          />
          <mesh
            geometry={nodes.eAcvqfZlEdoxHsj.geometry}
            material={materials.IlNnjEDxsExlBOr}
          />
          <mesh
            geometry={nodes.gkxaPoMYYRpyVMR.geometry}
            material={materials.iPZiEncThgnBMJv}
          />
          <mesh
            geometry={nodes.xlRLalLTesirCGW.geometry}
            material={materials.hPcehRUjcLAosED}
          />
          <mesh
            geometry={nodes.ZlizOzukFeXwbga.geometry}
            material={materials.kOcboIDeohDRqCf}
          />
          <mesh
            geometry={nodes.wXiLpiodZWNDroe.geometry}
            material={materials.HPAOpCInJKBtaOC}
          />
          <mesh
            geometry={nodes.PTxrSKzcEmHVtif.geometry}
            material={materials.VfcxYmbOfnqunYx}
          />
          <mesh
            geometry={nodes.RjGOdbHqvxkiDns.geometry}
            material={materials.lbGSuJJwEsUTzIm}
          />
          <mesh
            geometry={nodes.WPFmzKypKbUYgQT.geometry}
            material={materials.lbGSuJJwEsUTzIm}
          />
          <mesh
            geometry={nodes.QHqPxKdexBoFnAK.geometry}
            material={materials.zaEqorbaeeADKgU}
          />
          <mesh
            geometry={nodes.NWErafhynAfYQEz.geometry}
            material={materials.pZbDFXVUkfRwjmQ}
          />
          <mesh
            geometry={nodes.tEwRkclpxjXZzil.geometry}
            material={materials.UPMcPXFSRXevSGt}
          />
          <mesh
            geometry={nodes.QYMcPaZnXQfyXcJ.geometry}
            material={materials.NQXltfOcKPZPQdI}
          />
          <mesh
            geometry={nodes.piXptsgcOfaGWrM.geometry}
            material={materials.WLATjirhQCUYAAG}
          />
          <mesh
            geometry={nodes.SjSNuZdtWKZRuoq.geometry}
            material={materials.mpJhsaJJZPPWMEX}
          />
          <mesh
            geometry={nodes.QFFLzaWPRnuQYJR.geometry}
            material={materials.hPcehRUjcLAosED}
          />
          <mesh
            geometry={nodes.xjTvBwZFGvSMOud.geometry}
            material={materials.hPcehRUjcLAosED}
          />
          <mesh
            geometry={nodes.VqfccLWHjnpnmIO.geometry}
            material={materials.BMKLbAPYqPmfArt}
          />
          <mesh
            geometry={nodes.mUrIWHenIQKVHcb.geometry}
            material={materials.BMKLbAPYqPmfArt}
          />
          <mesh
            geometry={nodes.NdRhLFCrSxRNTxn.geometry}
            material={materials.BMKLbAPYqPmfArt}
          />
          <mesh
            geometry={nodes.vivXPkdlqllUnrl.geometry}
            material={materials.XNDkEZQapqqDHpk}
          />
          <mesh
            geometry={nodes.rIsAbujsARaHSub.geometry}
            material={materials.jAWKNAaRBMlZYro}
          />
          <mesh
            geometry={nodes.QMBrsnrwfcVKELm.geometry}
            material={materials.VqwNZwmDotIMflD}
          />
          <mesh
            geometry={nodes.NqLxSKdAypgOdPC.geometry}
            material={materials.initialShadingGroup}
          />
          <mesh
            geometry={nodes.guoofBSjCEiTIJr.geometry}
            material={materials.JjuwNKnMBUdtRLb}
          />
          <mesh
            geometry={nodes.jvyJQHpRnZNPEYh.geometry}
            material={materials.LJSCtLIrHNHZnIH}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/mac-v1.glb");
